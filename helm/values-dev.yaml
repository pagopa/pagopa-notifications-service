microservice-chart:
  namespace: "ecommerce"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: pagopadcommonacr.azurecr.io/pagopanotificationsservice
    tag: "1.6.0"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /health/liveness
      port: 3000
    initialDelaySeconds: 60
    failureThreshold: 6
    periodSeconds: 90
  readinessProbe:
    httpGet:
      path: /health/readiness
      port: 3000
    initialDelaySeconds: 60
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    ports:
      - 3000
  ingress:
    create: true
    host: "weudev.ecommerce.internal.dev.platform.pagopa.it"
    path: /pagopa-notifications-service/(.*)
    servicePort: 3000
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "150m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  autoscaling:
    minReplica: 1
    maxReplica: 2
    pollingInterval: 30 # seconds
    cooldownPeriod: 300 # seconds
    triggers:
      - type: azure-monitor
        metadata:
          tenantId: 7788edaf-0346-4068-9d79-c868aed15b3d
          subscriptionId: bbe47ad4-08b3-4925-94c5-1278e5819b86
          resourceGroupName: pagopa-d-ecommerce-sec-rg
          resourceURI: Microsoft.KeyVault/vaults/pagopa-d-ecommerce-kv
          metricName: ServiceApiHit
          # metricNamespace: Microsoft.KeyVault/vaults
          # metricFilter: namespace eq 'default'
          # metricAggregationInterval: "-1:1:0"
          metricAggregationType: Count
          targetValue: "30"
  terminationGracePeriodSeconds: 30
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  envConfig:
    NOTIFICATIONS_EMAIL_ENABLED: "true"
    AWS_SES_REGION: "eu-south-1"
    CLIENT_ECOMMERCE_TEST: "{\"TEMPLATE_IDS\":[\"poc-1\", \"success\", \"ko\"]}"
    CLIENT_PAYMENT_MANAGER: "{\"TEMPLATE_IDS\":[\"poc-1\", \"success\", \"ko\"]}"
    CLIENT_ECOMMERCE: "{\"TEMPLATE_IDS\":[\"poc-1\", \"success\", \"ko\"]}"
    RETRY_QUEUE_NAME: "pagopa-d-weu-ecommerce-notifications-service-retry-queue"
    ERROR_QUEUE_NAME: "pagopa-d-weu-ecommerce-notifications-service-errors-queue"
    AI_SAMPLING_PERCENTAGE: "30"
    AI_ENABLED: "true"
    PERSONAL_DATA_VAULT_API_HOST: "https://api.uat.tokenizer.pdv.pagopa.it"
    PERSONAL_DATA_VAULT_API_BASE_PATH: "/tokenizer/v1"
    PAGOPA_MAIL_LOGO_URI: "https://dev.checkout.pagopa.it/assets/logos/logo_pagopa.png"
    ELASTIC_APM_SERVICE_NAME: pagopa-notification-service
    ELASTIC_APM_SERVER_URL: http://quickstart-apm-http.elastic-system.svc:8200
    ELASTIC_APM_ENVIRONMENT: "dev"
    SERVER_KEEP_ALIVE: "61000"
  envSecret:
    AWS_SES_ACCESS_KEY_ID: aws-ses-accesskey-id
    AWS_SES_SECRET_ACCESS_KEY: aws-ses-secretaccess-key
    STORAGE_TRANSIENT_CONNECTION_STRING: ecommerce-storage-transient-connection-string
    STORAGE_DEADLETTER_CONNECTION_STRING: ecommerce-storage-deadletter-connection-string
    PERSONAL_DATA_VAULT_API_KEY: personal-data-vault-api-key
    ECOMMERCE_NOTIFICATIONS_SENDER: notifications-sender
    ELASTIC_APM_SECRET_TOKEN: elastic-apm-secret-token
  keyvault:
    name: "pagopa-d-ecommerce-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tolerations: []
  canaryDelivery:
    deployment:
      image:
        tag: ""
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
