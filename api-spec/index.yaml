openapi: 3.0.0
info:
  title: Notification API
  description: API to support notifications
  version: 0.0.1
  contact:
    name: pagoPA - Touchpoints team

externalDocs:
      url: https://pagopa.atlassian.net/wiki/spaces/I/pages/611745800/-servizio+notifications+service
      description: Technical specifications
servers:
- url: https://api.platform.pagopa.it/notifications
paths:
  /emails:
    post:
      summary: New Notification email
      description: Api used to process a new email notification
      operationId: sendNotificationEmail
      security:
        - ApiKeyAuth: []
      parameters:
      - name: X-Client-Id
        in: header
        description: Client identifier to handle connection parameters for Nodo
        required: true
        schema:
          minLength: 1
          type: string 
          x-extensible-enum:
            - CLIENT_ECOMMERCE
            - CLIENT_PAYMENT_MANAGER
        example: CLIENT_ECOMMERCE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationEmailRequest'
        required: true
      responses:
        200:
          description: Email notification started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationEmailResponse'
        202:
          description: Email notification enqueued
          content: {}
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        500:
          description: Generic server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /health/readiness:
    get:
      summary: Get service information
      operationId: getInfo
      responses:
        200:
          description: Service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        500:
          description: Generic server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /health/liveness:
    get:
      summary: Get service health
      operationId: getHealth
      responses:
        200:
          description: The service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        500:
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    NotificationEmailRequest:
      type: object
      description: Request body containing info about the mail to be sent
      properties:
        to:
          description: Email recipient
          type: string
          format: email
        subject:
          description: Email subject
          type: string
        templateId:
          description: Email template unique identifier
          type: string
        parameters:
          description: Parameters used to value email templates
          type: object
          properties: {}
        language:
          description: Language
          type: string
          format: iso639-1
      required:
       - parameters
       - subject
       - templateId
       - to
    NotificationEmailResponse:
      description: New mail response body
      type: object
      properties:
        outcome:
          description: Email notification outcome
          type: string
    HttpStatusCode:
      maximum: 6E+2
      exclusiveMaximum: true
      minimum: 1E+2
      type: integer
      description: |-
        The HTTP status code generated by the origin server for this occurrence
        of the problem.
      format: int32
      example: 200
    InfoResponse:
      description: Info response body
      type: object
      properties:
        version:
          description: Module version
          type: string
        name:
          description: Module name
          type: string
    HealthResponse:
      description: Health response body
      type: object
      properties:
        sentLast24Hours:
          description: Number of mail sent in the last 24 hours
          type: number
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          format: uri
          example: https://example.com/problem/constraint-violation
          default: about:blank
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
   
